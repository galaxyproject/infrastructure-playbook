---

galaxy_db_servers_group_templates:
  - src: templates/telegraf/workflow_landing_requests.sh.j2
    dest: "/usr/local/bin/workflow_landing_requests.sh"
    owner: root
    group: root
    mode: '0755'
  - src: templates/telegraf/tool_landing_requests.sh.j2
    dest: "/usr/local/bin/tool_landing_requests.sh"
    owner: root
    group: root
    mode: '0755'

# Always restart PostgreSQL on exit
galaxy_db_servers_group_systemd_overrides:
  - name: "postgresql-{{ __postgresql_version_dotless }}"
    override:
      Restart: "always"

# Variables from meta_galaxy_* group vars
postgresql_pg_hba_conf: "{{ galaxy_db_postgresql_pg_hba_conf }}"
postgresql_objects_users: "{{ galaxy_db_postgresql_objects_users }}"
postgresql_objects_groups: "{{ galaxy_db_postgresql_objects_groups }}"
postgresql_objects_databases: "{{ galaxy_db_postgresql_objects_databases }}"
postgresql_objects_privileges: "{{ galaxy_db_postgresql_objects_privileges }}"

galaxy_db_servers_group_groups:
  - "{{ tacc_groups.postgres }}"
  # This is necessary for proper quota usage on Corral
  - "{{ tacc_groups.G_803372 }}"

galaxy_db_servers_group_users:
  - "{{ tacc_users.postgres }}"

galaxy_db_servers_group_authorized_key_users:
  - name: "{{ galaxy_user }}"
    authorized:
      - nate_coraor
      - dannon_baker
      - marius_van_den_beek
      - john_davis

galaxy_db_servers_group_templates:
  # a quote mess
  - src: templates/telegraf/galaxy_tool_usage.sh.j2
    dest: /usr/local/bin/galaxy_tool_usage.sh
    mode: "0755"

galaxy_db_servers_group_packages:
  # for gxadmin
  - make
  # for Enis
  - jq
  - zip

_override_telegraf_agent_output:
  - type: influxdb
    config:
      - urls = ["https://stats.galaxyproject.org:8086"]
      - username = "client"
      - password = "{{ influxdb_client_pass }}"
      - database = "system"
      - '[outputs.influxdb.tagdrop]'
      - '  influxdb_database = ["*"]'
  - type: influxdb
    config:
      - urls = ["https://stats.galaxyproject.org:8086"]
      - username = "client"
      - password = "{{ influxdb_client_pass }}"
      - database = "{{ galaxy_instance_codename }}_sql"
      - 'tagexclude = ["influxdb_database"]'
      - '[outputs.influxdb.tagpass]'
      - '  influxdb_database = ["{{ galaxy_instance_codename }}_sql"]'

galaxy_db_servers_group_telegraf_plugins_extra:
  # introduces too much cardinality
  #galaxy_tool_popularity_1m:
  #  plugin: "exec"
  #  config:
  #    - commands = ["/bin/bash -c 'PGDATABASE=galaxy_{{ galaxy_instance_codename }} /usr/local/bin/gxadmin iquery tool-popularity 1 | sed \"s#toolshed.g2.bx.psu.edu/repos/##\"'"]
  #    - timeout = "300s"
  #    - data_format = "influx"
  #    - interval = "30m"
  #    - '[inputs.exec.tags]'
  #    - '  influxdb_database = "{{ galaxy_instance_codename }}_sql"'
  galaxy_tool_usage:
    plugin: "exec"
    config:
      - commands = ["/bin/bash /usr/local/bin/galaxy_tool_usage.sh"]
      - timeout = "300s"
      - data_format = "influx"
      - interval = "24h"
      - '[inputs.exec.tags]'
      - '  influxdb_database = "{{ galaxy_instance_codename }}_sql"'
  galaxy_tools_likely_broken_1w:
    plugin: "exec"
    config:
      - commands = ["/bin/bash -c 'PGDATABASE=galaxy_{{ galaxy_instance_codename }} /usr/local/bin/gxadmin iquery tool-likely-broken --short-tool-id 1'"]
      - timeout = "180s"
      - data_format = "influx"
      - interval = "15m"
      - '[inputs.exec.tags]'
      - '  influxdb_database = "{{ galaxy_instance_codename }}_sql"'
  galaxy_queue_by_tool:
    plugin: "exec"
    config:
      - commands = ["/bin/bash -c 'PGDATABASE=galaxy_{{ galaxy_instance_codename }} /usr/local/bin/gxadmin iquery queue --by tool'"]
      - timeout = "180s"
      - data_format = "influx"
      - interval = "1m"
      - '[inputs.exec.tags]'
      - '  influxdb_database = "{{ galaxy_instance_codename }}_sql"'
  galaxy_queue_by_destination:
    plugin: "exec"
    config:
      - commands = ["/bin/bash -c 'PGDATABASE=galaxy_{{ galaxy_instance_codename }} /usr/local/bin/gxadmin iquery queue --by destination | sed -E \"s/=([ ,])/=_null_\\1/\"'"]
      - timeout = "180s"
      - data_format = "influx"
      - interval = "1m"
      - '[inputs.exec.tags]'
      - '  influxdb_database = "{{ galaxy_instance_codename }}_sql"'
  # also too much cardinality
  #galaxy_queue_by_user:
  #  plugin: "exec"
  #  config:
  #    - commands = ["/bin/bash -c 'PGDATABASE=galaxy_{{ galaxy_instance_codename }} /usr/local/bin/gxadmin iquery queue --by user'"]
  #    - timeout = "180s"
  #    - data_format = "influx"
  #    - interval = "1m"
  #    - '[inputs.exec.tags]'
  #    - '  influxdb_database = "{{ galaxy_instance_codename }}_sql"'

  # Some custom galaxy monitoring stuff
  galaxy_uploaded:
    plugin: "exec"
    config:
      - commands = ["/bin/bash -c 'PGDATABASE=galaxy_{{ galaxy_instance_codename }} /usr/local/bin/gxadmin iquery upload-gb-in-past-hour'"]
      - timeout = "600s"
      - data_format = "influx"
      - interval = "1h"
      - '[inputs.exec.tags]'
      - '  influxdb_database = "{{ galaxy_instance_codename }}_sql"'
  galaxy_jobs_queued:
    plugin: "exec"
    config:
      - commands = ["/bin/bash -c 'PGDATABASE=galaxy_{{ galaxy_instance_codename }} /usr/local/bin/gxadmin iquery jobs-queued'"]
      - timeout = "15s"
      - data_format = "influx"
      - interval = "1m"
      - '[inputs.exec.tags]'
      - '  influxdb_database = "{{ galaxy_instance_codename }}_sql"'
  galaxy_jobs_queued_internal:
    plugin: "exec"
    config:
      - commands = ["/bin/bash -c 'PGDATABASE=galaxy_{{ galaxy_instance_codename }} /usr/local/bin/gxadmin iquery jobs-queued-internal-by-handler'"]
      - timeout = "15s"
      - data_format = "influx"
      - interval = "1m"
      - '[inputs.exec.tags]'
      - '  influxdb_database = "{{ galaxy_instance_codename }}_sql"'
  # this creates massive series cardinality because it includes user ids
  #galaxy_jobs_queue_overview:
  #  plugin: "exec"
  #  config:
  #    - commands = ["/bin/bash -c 'PGDATABASE=galaxy_{{ galaxy_instance_codename }} /usr/local/bin/gxadmin iquery queue-overview --short-tool-id | sed \"s/=,/=unknown,/\"'"]
  #    - timeout = "30s"
  #    - data_format = "influx"
  #    - interval = "1m"
  #    - '[inputs.exec.tags]'
  #    - '  influxdb_database = "{{ galaxy_instance_codename }}_sql"'
  galaxy_oidc:
    plugin: "exec"
    config:
      - commands = ["/bin/bash -c 'PGDATABASE=galaxy_{{ galaxy_instance_codename }} /usr/local/bin/gxadmin iquery users-with-oidc'"]
      - timeout = "15s"
      - data_format = "influx"
      - interval = "1m"
      - '[inputs.exec.tags]'
      - '  influxdb_database = "{{ galaxy_instance_codename }}_sql"'
  galaxy_workflow:
    plugin: "exec"
    config:
      - commands = ["/bin/bash -c 'PGDATABASE=galaxy_{{ galaxy_instance_codename }} /usr/local/bin/gxadmin iquery workflow-invocation-status'"]
      - timeout = "15s"
      - data_format = "influx"
      - interval = "1m"
      - '[inputs.exec.tags]'
      - '  influxdb_database = "{{ galaxy_instance_codename }}_sql"'
  galaxy_workflow_totals:
    plugin: "exec"
    config:
      - commands = ["/bin/bash -c 'PGDATABASE=galaxy_{{ galaxy_instance_codename }} /usr/local/bin/gxadmin iquery workflow-invocation-totals'"]
      - timeout = "15s"
      - data_format = "influx"
      - interval = "1m"
      - '[inputs.exec.tags]'
      - '  influxdb_database = "{{ galaxy_instance_codename }}_sql"'
  galaxy_workflow_landing_requests:
    plugin: "exec"
    config:
      - commands = ["/usr/local/bin/workflow_landing_requests.sh"]
      - timeout = "30s"
      - data_format = "influx"
      - interval = "5m"
      - '[inputs.exec.tags]'
      - '  influxdb_database = "{{ galaxy_instance_codename }}_sql"'
  galaxy_tool_landing_requests:
    plugin: "exec"
    config:
      - commands = ["/usr/local/bin/tool_landing_requests.sh"]
      - timeout = "30s"
      - data_format = "influx"
      - interval = "5m"
      - '[inputs.exec.tags]'
      - '  influxdb_database = "{{ galaxy_instance_codename }}_sql"'
  galaxy_disk_usage:
    plugin: "exec"
    config:
      - commands = ["/bin/bash -c 'PGDATABASE=galaxy_{{ galaxy_instance_codename }} /usr/local/bin/gxadmin iquery disk-usage'"]
      - timeout = "60s"
      - data_format = "influx"
      - interval = "5m"
      - '[inputs.exec.tags]'
      - '  influxdb_database = "{{ galaxy_instance_codename }}_sql"'

  # 10 foot testing
  galaxy_terminal_jobs:
    plugin: "exec"
    config:
      - commands = ["/bin/bash -c 'PGDATABASE=galaxy_{{ galaxy_instance_codename }} /usr/local/bin/gxadmin iquery jobs-terminal-summary --newer-than=\"24 hours\"'"]
      - timeout = "60s"
      - data_format = "influx"
      - interval = "5m"
      - '[inputs.exec.tags]'
      - '  influxdb_database = "{{ galaxy_instance_codename }}_sql"'
  galaxy_active_users:
    plugin: "exec"
    config:
      - commands = ["/bin/bash -c 'PGDATABASE=galaxy_{{ galaxy_instance_codename }} /usr/local/bin/gxadmin iquery active-user-count 24'"]
      - timeout = "60s"
      - data_format = "influx"
      - interval = "5m"
      - '[inputs.exec.tags]'
      - '  influxdb_database = "{{ galaxy_instance_codename }}_sql"'

postgresql_version: 16
postgresql_create_backup_dir: false
postgresql_backup_dir: /corral4/backup/pgsql/{{ inventory_hostname }}

postgresql_archive_wal_rsync_args: '--ignore-existing -pt --info=skip1'
postgresql_backup_rsync_backup_opts: '-rpt --chown=postgres:G-803372'
postgresql_backup_hour: 7
# sg is necessary because rsync copies with the default group and then performs a chown, which doesn't work for the way
# quotas are calculated on Corral 4.
postgresql_backup_command: >-
  /usr/bin/sg G-803372 -c
  "{{ postgresql_backup_local_dir | quote }}/bin/backup.py
  {{ '--rsync-connect-opts ' ~ (postgresql_backup_rsync_connect_opts | quote) if postgresql_backup_rsync_connect_opts else '' }}
  --rsync-backup-opts {{ postgresql_backup_rsync_backup_opts | quote }}
  --keep {{ postgresql_backup_keep | quote }}
  {{ '--pg-bin-dir ' ~ __postgresql_pgdg_bin_dir if ansible_os_family == 'RedHat' else '' }}
  --backup --clean-archive {{ postgresql_backup_dir | quote }}"

postgresql_conf:
  listen_addresses: "'*'"
  temp_buffers: 64MB
  max_prepared_transactions: 100
  log_checkpoints: "on"
  # prevent threads on less frequently hit handlers (e.g. VGP) from losing their connection after long quiet periods
  tcp_keepalives_idle: 300

  # DB Version: 16
  # # OS Type: linux
  # # DB Type: mixed
  # # Total Memory (RAM): 32 GB
  # # CPUs num: 16
  # # Connections num: 500
  # # Data Storage: san
  max_connections: 500
  shared_buffers: 8GB
  effective_cache_size: 24GB
  maintenance_work_mem: 2GB
  checkpoint_completion_target: 0.9
  wal_buffers: 16MB
  default_statistics_target: 100
  random_page_cost: 1.1
  effective_io_concurrency: 300  # NOTE: was 2(!) on galaxy-db-02
  work_mem: 64MB  # pgtune recommended 2097kB
  huge_pages: try
  min_wal_size: 1GB
  max_wal_size: 4GB
  max_worker_processes: 16
  max_parallel_workers_per_gather: 4
  max_parallel_workers: 16
  max_parallel_maintenance_workers: 4

gxadmin_dir: /usr/local/lib/gxadmin
gxadmin_bin_dir: /usr/local/bin
gxadmin_repo: https://github.com/natefoo/gxadmin.git
gxadmin_commit: 10-foot
