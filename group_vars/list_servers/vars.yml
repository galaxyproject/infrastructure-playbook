---

# for galaxyproject.mailman3's distribute_maps feature
list_servers_group_private_key_users: "{{ vault_listservers_group_private_key_users }}"

#
# galaxyproject.general.users
#

list_servers_group_users:
  - "{{ galaxyproject_users.michelle }}"

list_servers_group_groups:
  - "{{ galaxyproject_groups.michelle }}"

list_servers_group_authorized_key_users:
  - name: michelle
    authorized: [michelle_savage]

#
# usegalaxy_org.postgresql_relocate_pgdata
#

# Relocate PostgreSQL data dir on to the EBS volume. If Mailman were to run on a host where another service also needed
# PostgreSQL, this would not be appropriate. But for Mailman, we want to keep everything contained on one volume that
# can be easily attached to another instance.
postgresql_relocate_pgdata_dest: /var/lib/mailman3/postgresql
postgresql_relocate_pgdata_service_name: postgresql@14-main

#
# galaxyproject.postgresql_objects
#

postgresql_objects_users:
  - name: mailman3-web
  - name: list
  - name: michelle
postgresql_objects_databases:
  - name: mailman3_web
    owner: mailman3-web
  - name: mailman3_core
    owner: list
postgresql_objects_privileges:
  - database: mailman3_web
    objs: ALL_IN_SCHEMA
    roles: michelle
    privs: SELECT
  - database: mailman3_web
    objs: ALL_IN_SCHEMA
    roles: michelle
    privs: SELECT
    type: sequence

#
# galaxyproject.mailman3
#

# These vars are in meta_galaxyproject so that they can be used with MXs:
# - mailman3_domains
# - mailman3_distribute_maps_dir
mailman3_distribute_maps_dir: /var/list
mailman3_domains:
  - lists.galaxyproject.org
  - lists.anvilproject.org

mailman3_django_superusers: "{{ vault_mailman3_django_superusers }}"
mailman3_core_api_admin_user: "{{ vault_mailman3_core_api_admin_user }}"
mailman3_core_api_admin_pass: "{{ vault_mailman3_core_api_admin_pass }}"
mailman3_archiver_key: "{{ vault_mailman3_archiver_key }}"
## this isn't a role var, we just use it in the django config below
mailman3_django_secret_key: "{{ vault_mailman3_django_secret_key }}"

mailman3_config:
  mailman:
    site_owner: listmaster@lists.galaxyproject.org
  mta:
    # bypass the content filter (amavisd-new) for Mailman messages since they were scanned on the way in
    smtp_port: 10025
  database:
    class: mailman.database.postgresql.PostgreSQLDatabase
    url: postgresql:///mailman3_core?host=/var/run/postgresql
  arc:
    enabled: 'yes'
    privkey: "/etc/dkimkeys/mail.private"
    selector: mail
    domain: lists.galaxyproject.org
    dmarc: 'yes'
    dkim: 'yes'
    authserv_id: lists.galaxyproject.org
    trusted_authserv_ids: lists.galaxyproject.org, lists.anvilproject.org, galaxyproject.org

mailman3_postorius_root: ''
mailman3_hyperkitty_root: 'archives/'

mailman3_django_config:
  secret_key: "{{ mailman3_django_secret_key }}"
  # mostly using django sites instead but FILTER_VHOST uses this
  use_x_forwarded_host: true
  # store on the filesystem instead of the database
  hyperkitty_attachment_folder: "{{ mailman3_web_var_dir }}/attachments"
  databases:
    default:
      ENGINE: django.db.backends.postgresql_psycopg2
      NAME: mailman3_web
      HOST: /var/run/postgresql
  haystack_engine: xapian_backend.XapianEngine
  # FIXME: testing
  #debug: true

mailman3_extra_packages:
  - psycopg2-binary
  - xapian-haystack

# These are set in the distribute maps playbook's inventory file in [vars:all] and on the host
mailman3_distribute_maps:
  - host: all
    mailman3_distribute_maps_dir: "{{ mailman3_distribute_maps_dir }}"
    mailman3_postmap_command: /usr/sbin/postmap
  - host: artifact.galaxyproject.org
  - host: newtrail.galaxyproject.org

mailman3_distribute_map_frequency: 30

#
# galaxyproject.postfix
#

postfix_role: mda
postfix_mailname: "{{ inventory_hostname }}"

postfix_mailman3_var_dir: /var/lib/mailman3/data
postfix_config:
  compatibility_level: 3.6
  proxy_interfaces: "{{ ansible_ec2_public_ipv4 }}"
  transport_maps: hash:{{ postfix_mailman3_var_dir }}/postfix_lmtp
  local_recipient_maps: hash:{{ postfix_mailman3_var_dir }}/postfix_lmtp
  relay_domains: hash:{{ postfix_mailman3_var_dir }}/postfix_domains

postfix_master_config:
  # Override: since we are not using the blanket content_filter, need to disable relay_restrictions when reinjecting or
  # we create a loop; additionally, sign all mail that passes through amavis.
  localhost:10025-inet:
    args: |
      -o content_filter=
          -o local_recipient_maps=
          -o relay_recipient_maps=
          -o smtpd_restriction_classes=
          -o smtpd_delay_reject=no
          -o smtpd_client_restrictions=permit_mynetworks,reject
          -o smtpd_helo_restrictions=
          -o smtpd_sender_restrictions=
          -o smtpd_recipient_restrictions=permit_mynetworks,reject
          -o smtpd_data_restrictions=reject_unauth_pipelining
          -o smtpd_end_of_data_restrictions=
          -o mynetworks=127.0.0.0/8
          -o smtpd_error_sleep_time=0
          -o smtpd_soft_error_limit=1001
          -o smtpd_hard_error_limit=1000
          -o smtpd_client_connection_count_limit=0
          -o smtpd_client_connection_rate_limit=0
          -o receive_override_options=no_header_body_checks,no_unknown_recipient_checks
          -o milter_default_action=accept
          -o milter_protocol=6
          -o smtpd_milters=unix:/var/run/opendkim/opendkim.sock
          -o non_smtpd_milters=unix:/var/run/opendkim/opendkim.sock

postfix_amavisd_new_config:
  '@local_domains_acl': (".$mydomain", "{{ mailman3_domains | join('", "') }}")
  # don't alter subject
  $sa_spam_subject_tag: null
  # always add headers
  $sa_tag_level_deflt: -9999
  # add "spam detected" headers at this level
  $sa_tag2_level_deflt: 6.31
  # discard viruses, spam, and messages containing banned files
  $final_virus_destiny: D_DISCARD
  $final_banned_destiny: D_DISCARD
  $final_spam_destiny: D_DISCARD
  $final_bad_header_destiny: D_PASS
  # FIXME: need spamassassin plugin for mailman
  # don't check spam bound for Mailman (Mailman does it itself)
  #'@bypass_spam_checks_acl': @spam_lovers_acl = qw({{ mailman3_domains | join(' ') }})
  #'@spam_kill_level_maps': ({'lists.galaxyproject.org' => 9999 }, \$sa_kill_level_deflt, )

postfix_aliases:
  mailer-daemon: postmaster
  postmaster: root
  nobody: root
  hostmaster: root
  usenet: root
  news: root
  webmaster: root
  www: root
  ftp: root
  abuse: root
  noc: root
  security: root
  postorius: root
  listmaster: root
  root: root@galaxyproject.org

#
# galaxyproject.opendkim
#

opendkim_keys:
  - selector: galaxy-lists
    domain: lists.galaxyproject.org
    secret: "{{ vault_opendkim_key_galaxy_lists_secret }}"
    public: "v=DKIM1; h=sha256; k=rsa; p=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwasUVHBL8zMCH/WJRF5CLqbQnvqAhHhQ5/57KJJWz3s61p5dzPYVzILmsCN9Ceidd3eOG4QWpuUfB0ygoJ+Q+IxP+a6egGClUfhLugRqP/iD1g3+D3sa6OyLBwOpMT79KXmiy1+Qk2h2GxeXdK2pM++fvWoXdJ9NHLoL8LbyYrIJlcBtjKJfY84V041Bc6FHZogcrGj7s7JvijziJyUi2H4TfapdFHcKQ9qKEy6p0dqDcHcd1lAKcZxsTYz/OKGDu+WQt4VAHvQDlCLY65sO7G/hav6Oxkjl45gWTZAQfohq3mQGCTv6+mVUVLn3v/fMCqdxrBjluh6Ocszu3NrT+wIDAQAB"
  - selector: anvil-lists
    domain: lists.anvilproject.org
    secret: "{{ vault_opendkim_key_anvil_lists_secret }}"
    public: "v=DKIM1; h=sha256; k=rsa; p=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAm3ZkaXFnp1fCwEogQxWLzSqbMU6MIJ/CmvrycqZwn3KIHpFVNd7HfPT4W9hZbSjhUsn2ZJdEOtljkhqQpB4HCi0WJzKNlrc9EPIrRO+jFYCWoPE1MsRd/aDsebIpY9DIpHLxls2BEJlHVO0BRP19nTCT9b1FHmioh9VJEQt+46O5Q4GQU0Aedrz2wZjIPdg1oQnl602amkYx4/M6efV0BEd7XViWR0wy1GYTpjSJs8rtVn+V2Vb4sBmenKcN37TSVh4zysJmXaGuFeM4JzQEBVAi1sL2E0vopDQ4z8u7DpWi58IRwmtrRnxhOH3HecvTgPbCpUXr+4oEgdLTR6NmWwIDAQAB"

opendkim_trusted_hosts:
  - 127.0.0.1
  - ::1
  - localhost

opendkim_signing_table:
  - lists.galaxyproject.org galaxy-lists._domainkey.lists.galaxyproject.org
  - lists.anvilproject.org anvil-lists._domainkey.lists.anvilproject.org

opendkim_config:
  Syslog: yes
  SyslogSuccess: yes
  LogWhy: yes
  Socket: "local:/var/run/opendkim/opendkim.sock"
  KeyTable: "file:{{ opendkim_config_dir }}/KeyTable"
  ExternalIgnoreList: "refile:{{ opendkim_config_dir }}/TrustedHosts"
  InternalHosts: "refile:{{ opendkim_config_dir }}/TrustedHosts"
  SigningTable: "file:{{ opendkim_config_dir }}/SigningTable"

#
# galaxyproject.nginx + usegalaxy_eu.certbot
#

nginx_conf_http:
  proxy_read_timeout: "{{ mailman3_web_timeout }}"
nginx_flavor: core
nginx_servers:
  - certbot_redirects
nginx_ssl_servers:
  - mailman

nginx_ssl_role: usegalaxy_eu.certbot
nginx_conf_ssl_certificate: /etc/ssl/certs/fullchain.pem
nginx_conf_ssl_certificate_key: /etc/ssl/user/privkey-www-data.pem

certbot_virtualenv_package_name: python3-venv
certbot_virtualenv_command: python3 -m venv
certbot_auto_renew: true
certbot_auto_renew_cron_file: ansible_certbot_auto_renew
certbot_auto_renew_user: root
certbot_auth_method: --webroot
certbot_domains: "{{ [inventory_hostname] + mailman3_domains }}"
certbot_admin_email: nate@bx.psu.edu
certbot_agree_tos: --agree-tos
certbot_well_known_root: /srv/nginx/_well-known_root
certbot_share_key_users:
  - www-data
certbot_post_renewal: |
  systemctl restart nginx || true
