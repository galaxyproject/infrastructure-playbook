---

tool_shed_servers_group_packages:
  - rsync
  - python3-venv
  - tmpreaper
  # for v1 client, not needed for v2
  - make

tool_shed_servers_group_users:
  - "{{ galaxyproject_users.shed }}"
  - "{{ galaxyproject_users.shedsrc }}"
  - "{{ galaxyproject_users.shedweb }}"

tool_shed_servers_group_groups:
  - "{{ galaxyproject_groups.shed }}"
  - "{{ galaxyproject_groups.shedsrc }}"
  - "{{ galaxyproject_groups.shedweb }}"

tool_shed_servers_group_authorized_key_users:
  - name: root
    authorized: "{{ galaxy_admin_users }}"
  - name: "{{ tool_shed_user }}"
    authorized: "{{ galaxy_team_users }}"
  - name: "{{ tool_shed_privileged_user }}"
    authorized: "{{ galaxy_team_users }}"

tool_shed_servers_group_directories:
  - path: /srv/toolshed
    owner: root
    group: root
    mode: "0755"
  - path: "{{ tool_shed_root }}"
    owner: "{{ tool_shed_privileged_user }}"
    group: "{{ tool_shed_privileged_group }}"
  - path: "{{ tool_shed_tmp_dir }}"
    owner: "{{ tool_shed_user }}"
    group: "{{ tool_shed_group }}"
  - path: "{{ tool_shed_root }}"
    owner: "{{ tool_shed_privileged_user }}"
    group: "{{ tool_shed_privileged_group }}"
  - path: "{{ tool_shed_mutable_config_dir }}"
    owner: "{{ tool_shed_user }}"
    group: "{{ tool_shed_group }}"
  - path: "{{ tool_shed_log_dir }}"
    owner: "{{ tool_shed_user }}"
    group: "{{ tool_shed_group }}"

tool_shed_servers_group_crontabs:
  - id: tool_shed_repos_backup
    name: Tool Shed repos backup
    user: "{{ tool_shed_user }}"
    hour: "{{ tool_shed_backup_hour }}"
    minute: 0
    job: rsync -av --delete -e "ssh -i $HOME/.ssh/id_backup_rsync" {{ tool_shed_repos_dir }}/ {{ tool_shed_hgweb_config_dir }}/hgweb.config {{ zfs_backup_profile.user }}@{{ zfs_backup_profile.server }}:repos && ssh -T -i $HOME/.ssh/id_backup_zfs {{ zfs_backup_profile.user }}@{{ zfs_backup_profile.server }} -- repos@`date -u +\%Y\%m\%dT\%H\%M\%SZ`

postgresql_flavor: pgdg
postgresql_version: 16
postgresql_backup_dir: "{{ zfs_backup_profile.user }}@{{ zfs_backup_profile.server }}:postgresql"
postgresql_backup_python_executable: python3

postgresql_backup_rsync_connect_opts: '-e "ssh -i /var/lib/postgresql/.ssh/id_backup_rsync"'
postgresql_backup_post_command: ssh -T -i $HOME/.ssh/id_backup_zfs {{ zfs_backup_profile.user }}@{{ zfs_backup_profile.server }} -- postgresql@`date -u +\%Y\%m\%dT\%H\%M\%SZ`

# snapshots mean the actual number kept is much greater
postgresql_backup_keep: 7

# postgresql_conf is tuned for the VM and therefore found in host_vars

postgresql_objects_users:
  - name: "{{ tool_shed_user }}"

postgresql_objects_databases:
  - name: "{{ tool_shed_dbname }}"
    owner: "{{ tool_shed_user }}"

## used by: other vars and various templates
tool_shed_root: "/srv/toolshed/{{ tool_shed_instance_codename }}"
tool_shed_tmp_dir: "{{ tool_shed_mutable_data_dir }}/tmp"
tool_shed_server_dir: "{{ tool_shed_root }}/server"
tool_shed_log_dir: "{{ tool_shed_root }}/log"
tool_shed_repos_dir: "{{ tool_shed_mutable_data_dir }}/repos"

## used by: systemd templates
tool_shed_gunicorn_workers: 2
tool_shed_gunicorn_bind: "127.0.0.1:9009"
tool_shed_gunicorn_max_requests: 50000
tool_shed_gunicorn_max_requests_jitter: 5000
tool_shed_hgweb_dir: "{{ tool_shed_root }}/hgweb"
tool_shed_hgweb_user: shedweb
tool_shed_hgweb_group: shed
tool_shed_hgweb_gunicorn_workers: 2
tool_shed_hgweb_gunicorn_bind: "127.0.0.1:3003"
tool_shed_hgweb_max_requests: 500
tool_shed_hgweb_max_requests_jitter: 50
tool_shed_hgweb_config_dir: "{{ tool_shed_mutable_data_dir }}/hgweb_config_dir"

## used by: tool_shed_* roles
tool_shed_user: shed
tool_shed_group: shed
tool_shed_privileged_user: shedsrc
tool_shed_privileged_group: shedsrc
tool_shed_virtualenv_command: python3 -m venv
# galaxy.dependencies.optional needs a way to specify config_section:
tool_shed_additional_venv_packages:
  - psycopg2-binary
  - sentry-sdk[fastapi]

tool_shed_config_file_mode: "0644"
tool_shed_config:
  tool_shed:
    # secrets

    id_secret: "{{ tool_shed_config_id_secret }}"
    admin_users: "{{ tool_shed_config_admin_users }}"

    # paths

    file_path: "{{ tool_shed_repos_dir }}"
    new_file_path: "{{ tool_shed_tmp_dir }}"
    tool_data_path: "{{ tool_shed_mutable_data_dir }}/tool-data"
    hgweb_config_dir: "{{ tool_shed_hgweb_config_dir }}"

    # general stuff

    database_connection: "postgresql:///{{ tool_shed_dbname }}?host=/var/run/postgresql"
    log_level: "DEBUG"
    ga_code: "{{ tool_shed_config_ga_code }}"
    debug: false
    support_url: "https://galaxyproject.org/support"
    smtp_server: "smtp.psu.edu"
    email_from: "galaxy-no-reply@toolshed.g2.bx.psu.edu"
    sentry_dsn: "{{ tool_shed_config_sentry_dsn }}"
    # prevent writing "repos/" to hgweb.config
    hgweb_repo_prefix: ""

    # stuff that shouldn't be here but maybe has to
    conda_auto_init: false
    tool_dependency_dir: "{{ tool_shed_mutable_data_dir }}/dependencies"

nginx_enable_default_server: false

nginx_conf_ssl_protocols:
  - TLSv1.2
  - TLSv1.3

nginx_conf_http:
  server_names_hash_bucket_size: 128
  client_max_body_size: 64M
  proxy_read_timeout: 3600
  uwsgi_read_timeout: 600
  gzip_vary: 'on'
  gzip_proxied: any
  gzip_comp_level: 6
  gzip_buffers: 16 8k
  gzip_http_version: 1.1
  gzip_types: text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript


## used by: galaxyproject.galaxy
nginx_srv: /srv/nginx
nginx_ssl_role: usegalaxy_eu.certbot
nginx_conf_ssl_certificate: /etc/ssl/certs/fullchain.pem
nginx_conf_ssl_certificate_key: /etc/ssl/private/privkey.pem

certbot_auto_renew_hour: "{{ 23 |random(seed=inventory_hostname)  }}"
certbot_auto_renew_minute: "{{ 59 |random(seed=inventory_hostname)  }}"
certbot_auth_method: --webroot
certbot_install_method: virtualenv
certbot_auto_renew: yes
certbot_auto_renew_user: root
certbot_environment: production
certbot_well_known_root: "{{ nginx_srv }}/_well-known_root"
#certbot_share_key_users:
#  - "{{ nginx_conf_user }}"
certbot_post_renewal: |
  systemctl restart nginx || true
certbot_agree_tos: --agree-tos
certbot_virtualenv_package_name: python3-venv
certbot_virtualenv_command: python3 -m venv

nginx_servers:
  - certbot_redirects

nginx_ssl_servers:
  - toolshed

certbot_domains:
  - "{{ inventory_hostname }}"
  - "{{ tool_shed_instance_hostname }}"

## used by: error_pages
error_pages_support_url: "https://status.galaxyproject.org/"
error_pages_masthead_url: "https://galaxyproject.org/"
