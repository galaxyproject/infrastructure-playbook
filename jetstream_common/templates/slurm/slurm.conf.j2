##
## This file is maintained by Ansible - CHANGES WILL BE OVERWRITTEN
##
ControlMachine={{ controller_name }}
ControlAddr={{ controller_ip }}
#
AuthType=auth/munge
FastSchedule=1
JobCompLoc=/var/log/slurm/slurm.job.log
JobCompType=jobcomp/filetxt
PluginDir=/usr/lib64/slurm
SchedulerType=sched/backfill
#SelectType=select/cons_res
#SelectTypeParameters=CR_CPU_Memory
SelectType=select/linear
SlurmUser=slurm
SlurmctldPort=7002
SlurmctldTimeout=300
SlurmdPort=7003
SlurmdSpoolDir=/var/lib/slurm/slurmd/slurmd.spool
SlurmdTimeout=300
StateSaveLocation=/var/lib/slurm/slurmctld/slurm.state
SwitchType=switch/none
DefaultStorageLoc=/var/log/slurm/slurm_accounting
AccountingStorageType=accounting_storage/slurmdbd
AccountingStorageHost=galaxy02.tacc.utexas.edu
#AccountingStoragePort=6819
AccountingStoragePort=30001
JobAcctGatherType=jobacct_gather/linux
JobAcctGatherFrequency=task=15
ProctrackType=proctrack/linuxproc
ClusterName={{ slurm_cluster_name }}
ReturnToService=1
#
# Node Configurations
#
# CPUs = Sockets * CoresPerSocket * ThreadsPerCore
{% for node_type in slurm_nodes %}
{% for host in groups[node_type.inventory_group] %}
NodeName={{ hostvars[host]['inventory_hostname_short'] }} NodeAddr={{ hostvars[host]['ansible_host'] }} RealMemory={{ node_type.real_memory }} Sockets={{ node_type.sockets }} CoresPerSocket=1 ThreadsPerCore=1 State=UNKNOWN
{% endfor %}
{% endfor %}
# Needed when setting up a controller without workers
NodeName=placeholder CPUs=64 State=future
#
# Partition Configurations
#
{# well this is less than ideal, it should loop partitions, and then generate a hostlist for that partition. but this works for now... #}
{% for node_type in slurm_nodes %}
PartitionName=multi State=UP MaxTime=48:20:00 MaxNodes=1 Nodes={{ slurm_hostlists.results[0].stdout | default( 'placeholder') }}
{% endfor %}

SlurmctldDebug=7
SlurmdDebug=6
