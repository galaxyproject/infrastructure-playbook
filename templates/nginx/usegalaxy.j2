##
## This file is maintained by Ansible - CHANGES WILL BE OVERWRITTEN
##

upstream galaxy {
    least_conn;
    server 127.0.0.1:8080;
    server 127.0.0.1:8081;
}

upstream tusd {
    server 127.0.0.1:{{ galaxy_tusd_port }};
}

# Pass headers from upstream when proxied by the load balancer
#map $server_port $gx_host {
#    443     $host;
#    8000    $http_host;
#}
#
#map $server_port $gx_x_real_ip {
#    443     $remote_addr;
#    8000    $http_x_real_ip;
#}
#
#map $server_port $gx_x_forwarded_for {
#    443     $proxy_add_x_forwarded_for;
#    8000    $http_x_forwarded_for;
#}

# CORS-related maps for Avivator
map $http_origin $cors_origin {
    default "";
    "~^https?://avivator\.gehlenborglab\.org$" $http_origin;
}

map $http_origin $cors_methods {
    default "";
    "~^https?://avivator\.gehlenborglab\.org$" "GET";
}

map $http_origin $cors_headers {
    default "";
    "~^https?://avivator\.gehlenborglab\.org$" "Range";
}

server {
    listen       *:443 ssl http2 default_server;
    server_name  usegalaxy.org *.usegalaxy.org {{ inventory_hostname_short }}.usegalaxy.org;

    client_max_body_size 50g;

    include {{ nginx_conf_dir }}/usegalaxy_proxy.conf;

    # Avivator display application
    location ~* ^/display_application/.+/avivator/main/ {
        proxy_pass http://galaxy;

        # Add CORS headers only here
        add_header 'Access-Control-Allow-Origin'  $cors_origin always;
        add_header 'Access-Control-Allow-Methods' $cors_methods always;
        add_header 'Access-Control-Allow-Headers' $cors_headers always;

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Headers' 'Range' always;
            add_header 'Access-Control-Allow-Methods' 'GET,OPTIONS' always;
            add_header 'Access-Control-Allow-Origin'  $http_origin always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # TIaaS
    location /tiaas {
        proxy_pass            http://{{ tiaas_socket_listen }};
        proxy_redirect        off;
        proxy_set_header      Host                 $host;
        proxy_set_header      X-Real-IP            $remote_addr;
        proxy_set_header      X-Forwarded-For      $proxy_add_x_forwarded_for;
        proxy_hide_header     X-Frame-Options;
        proxy_read_timeout    600;  # seconds
    }

    location /tiaas/static {
        alias {{ tiaas_static_dir }};
    }

    location {{ tiaas_galaxy_prefix }}/join-training {
        proxy_pass            http://{{ tiaas_socket_listen }};
        proxy_redirect        off;
        proxy_set_header      Host                 $host;
        proxy_set_header      X-Real-IP            $remote_addr;
        proxy_set_header      X-Forwarded-For      $proxy_add_x_forwarded_for;
        proxy_hide_header     X-Frame-Options;
        proxy_read_timeout    600;  # seconds
    }
}

# Domain-based Galaxy Interactive Tools (GxITs)
server {
    listen       *:443 ssl;
    server_name  *.interactivetool.usegalaxy.org;

    # Enable HSTS (age is 180 days)
    add_header Strict-Transport-Security "max-age=15552000; includeSubdomains";

    access_log  /var/log/nginx/main-gxit-proxy.access.log;
    error_log   /var/log/nginx/main-gxit-proxy.error.log;

    location / {
        proxy_redirect      off;
        proxy_http_version  1.1;
        #proxy_set_header    Host        $gx_host;
        #proxy_set_header    X-Real-IP   $gx_x_real_ip;
        #proxy_set_header    Upgrade     $http_upgrade;
        proxy_set_header    Host        $host;
        proxy_set_header    X-Real-IP   $remote_addr;
        proxy_set_header    Upgrade     $http_upgrade;
        proxy_set_header    Connection  "upgrade";
        proxy_pass          http://{{ gxit_proxy_host }}:{{ gxit_proxy_port }};
    }

    # error docs
    #error_page  502 503 504 /error/502/index.shtml;
    #error_page  413         /error/413/index.html;
    #location /error {
    #    ssi on;
    #    root /srv/nginx/galaxy;
    #}

}

# vim: set filetype=nginx
