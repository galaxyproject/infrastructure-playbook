##
## This file is maintained by Ansible - CHANGES WILL BE OVERWRITTEN
##

# SSL_read() failed (SSL: error:0A000126:SSL routines::unexpected eof while reading) while processing HTTP/2 connection,
# https://github.com/openssl/openssl/discussions/22690
ssl_conf_command Options IgnoreUnexpectedEOF;

# Redirect www -> root
server {
    listen       *:443 ssl;
    server_name  www.usegalaxy.org;

    return 301 https://usegalaxy.org$request_uri;
}

# Define web upstream
upstream galaxy {
    least_conn;
    # Don't double proxy through nginx or failover doesn't work properly
{% for name in groups['galaxy_main_web_servers'] %}
    server {{ lookup('dig', name) }}:8080;
    server {{ lookup('dig', name) }}:8081;
{% endfor %}
{% for name in groups['galaxy_main_staging_servers'] %}
    server {{ lookup('dig', name) }}:8080 backup;
    server {{ lookup('dig', name) }}:8081 backup;
{% endfor %}
}

# Define staging upstreams
upstream galaxy_staging {
    least_conn;
{% for name in groups['galaxy_main_staging_servers'] %}
    server {{ lookup('dig', name) }}:8080;
    server {{ lookup('dig', name) }}:8081;
{% endfor %}
{% for name in groups['galaxy_main_web_servers'] %}
    server {{ lookup('dig', name) }}:8080 backup;
    server {{ lookup('dig', name) }}:8081 backup;
{% endfor %}
}

upstream galaxy_staging_upload {
    # For nginx_upload_module we have to double proxy
{% for name in groups['galaxy_main_staging_servers'] %}
    server {{ lookup('dig', name) }}:8000;
{% endfor %}
{% for name in groups['galaxy_main_web_servers'] %}
    server {{ lookup('dig', name) }}:8000 backup;
{% endfor %}
}

upstream tusd {
{% for name in groups['galaxy_main_web_servers'] %}
    server {{ lookup('dig', name) }}:{{ galaxy_tusd_port }};
{% endfor %}
{% for name in groups['galaxy_main_staging_servers'] %}
    server {{ lookup('dig', name) }}:{{ galaxy_tusd_port }} backup;
{% endfor %}
}

# Main server
server {
    listen       *:443 ssl http2 default_server;
    server_name  usegalaxy.org *.usegalaxy.org;

    access_log  /var/log/nginx/main.access.log;
    error_log   /var/log/nginx/main.error.log;

    # logflux logger
    error_log syslog:server=unix:/run/systemd/journal/dev-log error;

    client_max_body_size 50g;

    # usegalaxy.org link shortening
    include {{ nginx_conf_dir }}/usegalaxy_rewrites.conf;
    include {{ nginx_conf_dir }}/usegalaxy_proxy.conf;

    # TIaaS
    location /tiaas {
        proxy_pass            http://galaxy-main1.tacc.utexas.edu:8001;
        proxy_redirect        off;
        proxy_set_header      Host                 $host;
        proxy_set_header      X-Real-IP            $remote_addr;
        proxy_set_header      X-Forwarded-For      $remote_addr;
        proxy_hide_header     X-Frame-Options;
        proxy_read_timeout    600;  # seconds
    }

    location /tiaas/static {
        proxy_pass            https://galaxy-main1.usegalaxy.org;
        proxy_redirect        off;
        proxy_ssl_protocols   TLSv1.3;
        proxy_set_header      Host                 $host;
        proxy_set_header      X-Real-IP            $remote_addr;
        proxy_set_header      X-Forwarded-For      $remote_addr;
        proxy_hide_header     X-Frame-Options;
    }

    location {{ tiaas_galaxy_prefix }}/join-training {
        proxy_pass            http://galaxy-main1.tacc.utexas.edu:8001;
        proxy_redirect        off;
        proxy_set_header      Host                 $host;
        proxy_set_header      X-Real-IP            $remote_addr;
        proxy_set_header      X-Forwarded-For      $remote_addr;
        proxy_hide_header     X-Frame-Options;
        proxy_read_timeout    600;  # seconds
    }
}

# Main staging server
server {
    listen       *:443 ssl http2;
    server_name  staging.usegalaxy.org;

    access_log  /var/log/nginx/staging.access.log;
    error_log   /var/log/nginx/staging.error.log;

    # upstreams set this to a reasonable value
    client_max_body_size 0;

    # Disable buffering
    proxy_request_buffering off;
    proxy_buffering off;

    location / {
        proxy_pass         http://galaxy;
        proxy_redirect     off;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $remote_addr;
        proxy_set_header   X-Forwarded-Proto $scheme;
    }

    location ~ ^/api/jobs/[^/]+/files {
        proxy_pass         http://galaxy_staging;
        proxy_redirect     off;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $remote_addr;
        proxy_set_header   X-Forwarded-Proto $scheme;
    }

    location /_job_files {
        proxy_pass         http://galaxy_staging_upload;
        proxy_redirect     off;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $remote_addr;
        proxy_set_header   X-Forwarded-Proto $scheme;
    }

    # since this is internal it should be unnecessary
    #location /_upload_job_files_done {
    #}
}

# Domain-based Galaxy Interactive Tools (GxITs)
server {
    listen       *:443 ssl http2;
    server_name  *.interactivetool.usegalaxy.org;

    # Enable HSTS (age is 180 days)
    add_header Strict-Transport-Security "max-age=15552000; includeSubdomains";

    access_log  /var/log/nginx/main-gxit-proxy.access.log;
    error_log   /var/log/nginx/main-gxit-proxy.error.log;

    location / {
        proxy_redirect      off;
        proxy_http_version  1.1;
        proxy_set_header    Host        $host;
        proxy_set_header    X-Real-IP   $remote_addr;
        proxy_set_header    Upgrade     $http_upgrade;
        proxy_set_header    Connection  "upgrade";
        proxy_pass          http://{{ gxit_proxy_host }}:{{ gxit_proxy_port }};
    }

    # error docs
    #error_page  502 503 504 /error/502/index.shtml;
    #error_page  413         /error/413/index.html;
    #location /error {
    #    ssi on;
    #    root /srv/nginx/galaxy;
    #}

}

# vim: set filetype=nginx
