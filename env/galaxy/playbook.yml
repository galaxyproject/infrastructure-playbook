---

- name: Bootstrap Python2 for Ansible
  hosts: jenkinsagents_eu
  gather_facts: false
  tasks:
    - name: Bootstrap Python2 for Ansible
      raw: bash -c "test -e /usr/bin/python || (apt -qqy update && apt install -qqy python2.7 python)"
      register: output
      changed_when: output.stdout != ""

- name: Bootstrap Python 3 for Ansible
  hosts: usepython3_el
  remote_user: root
  gather_facts: false
  tasks:
    - name: Bootstrap Python 3 for Ansible
      raw: bash -c "test -e /opt/rh/rh-python36/root/bin/python3|| (yum install -y dnf centos-release-scl && yum install -y rh-python36)"
      register: output
      changed_when: output.stdout != ""

- name: Get EC2 Facts
  hosts: ec2hosts
  remote_user: root
  tasks:
    - name: Get EC2 Facts
      action: ec2_metadata_facts
  tags: always

- name: Tasks for virtualized hosts
  hosts: virtual
  remote_user: root
  roles:
    - virtual
  tags: initial,system

- name: Include baseenv plays
  import_playbook: _inc_baseenv.yml

- name: Include baseenv plays
  import_playbook: _inc_galaxyenv.yml

- name: Set up authentication keys for non-baseenv hosts
  hosts: authkeyhosts
  remote_user: root
  roles:
    - users
  tags: users

- name: Set up SSH tunnels
  hosts: sshtunnels
  remote_user: root
  roles:
    - systemd_ssh_tunnel
  tags: [system, sshtunnel]

# This is sort of ugly - we don't want to use the galaxyenv basenv for
# jetstream controllers because they are controlled in the jetstream envs. All
# this is used for currently is setting up the `swarm` system user.
- name: Initial setup for docker swarm managers
  hosts: dockerswarmmanagers
  remote_user: root
  roles:
    - role: users
      tags: users
  tags: initial

- name: Tasks for "lite environment" hosts
  hosts: liteenv
  remote_user: root
  roles:
    - role: kerberos
      tags: kerberos,sssd
    - role: ldap
      tags: ldap,sssd
    # Must run after kerberos and ldap, which build up the SSSD config dynamically
    - role: sssd
      tags: sssd
  tags: liteenv

# This play is currently Debuntu-only
- name: Tasks for "full environment" hosts
  hosts: fullenv
  remote_user: root
  roles:
    - role: nfs
      tags: nfs
  tags: fullenv

# FIXME: why is the always tag being applied to this whole play?
#- name: Tasks for infrastructure servers
#  hosts: kerberosservers
#  remote_user: root
#  roles:
#    - name: required_vars
#      required_vars_roles: kerberos_kdc
#      tags: always
#    - name: kerberos_kdc
#      tags: kerberos_kdc,kerberos
#  tags: infrastructure

- name: Tasks for webservers
  hosts: webservers
  remote_user: root
  roles:
    - role: geerlingguy.repo-epel
      when: ansible_os_family == "RedHat"
    - role: galaxyproject.nginx
  tags: nginx

- name: Install and configure supervisor
  hosts: all
  remote_user: root
  roles:
    - role: supervisor
      when: "{{ lookup('inheritance_chain', 'supervisor_configs') | bool }}"
      tags: supervisor,services

- name: Tasks for jenkins hosts
  hosts: jenkinsagents
  remote_user: root
  roles:
    - role: docker
  post_tasks:
    - name: Create jenkins user
      user:
        name: jenkins
        groups: docker
        system: true
    - name: Install OverlayFS mount script
      copy:
        src: files/jenkins/mount-overlayfs.sh
        dest: /usr/local/sbin/jenkins-mount-overlayfs
        owner: root
        group: root
        mode: '0755'
    - name: Create OverlayFS unmount link
      file:
        src: jenkins-mount-overlayfs
        dest: /usr/local/sbin/jenkins-umount-overlayfs
        state: link
    - name: Install OverlayFS mount sudo configuration
      copy:
        src: files/jenkins/mount-overlayfs.sudoers
        dest: /etc/sudoers.d/99_jenkins_overlayfs
        owner: root
        group: root
        mode: '0440'
  tags: jenkins

- name: Tasks for biostar hosts
  hosts: biostarservers
  roles:
    - role: users
      tags: system,users
  tags: initial

# This is here because it's currently due to a SmartOS issue:
# https://github.com/joyent/smartos-live/issues/469
# If that issue is fixed, it should be possible to remove this and undo
# explicitly setting the sys_fs_import priv
- name: Assign the sys_fs_import privilege to backup users
  hosts: zfsbackupservers
  remote_user: root
  vars:
    backupusers:
      - zfsdump-orval
  tasks:
    - name: "Set sys_fs_import for backup users"
      lineinfile:
        dest: /etc/user_attr
        backup: "yes"
        line: "{{ item }}::::type=normal;defaultpriv=basic,sys_fs_import"
        regexp: "^{{ item }}:.*"
      with_items: backupusers

- name: Tasks for stats servers
  hosts: statsservers
  remote_user: root
  roles:
    # TODO: install on other stuff
    - role: dj-wasabi.telegraf
    - role: stats
  # FIXME: currently you run this once on startup using 2.5, then rerun again w/ stats_influxdb_auth_enabled set to fix
  # the config
  tags:
    - stats

- name: Tasks for sentry servers
  hosts: sentryservers
  remote_user: root
  tasks:
    # must be installed in ansible_python_interpreter
    - name: Install Docker Compose
      pip:
        name: docker-compose
        version: "{{ docker_compose_version | default(omit) }}"
    - name: Import docker role
      import_role:
        name: docker
    # restart docker for moved data dir
    - name: Flush handlers
      meta: flush_handlers
    - name: Import sentry role
      import_role:
        name: sentry
  tags: sentry

# This is only necessary on the new lx-brand zone PSU stratum 1, which can't bind port 80 when run in standard
# daemon/forking mode (and iptables and setcap aren't possible in lx-brand, and systemd-socket-proxyd yields a strange
# arp error in squid). Run before CVMFS is installed or repo initialization will fail.
- name: Install Squid systemd servce unit for LX-brand Stratum 1s
  hosts: cvmfsstratum1servers
  tasks:
    - name: Install Squid systemd service unit
      copy:
        src: files/cvmfs/squid-foreground.service
        dest: /etc/systemd/system/squid.service
      when: ansible_virtualization_role == "guest" and ansible_virtualization_type == "zone"
      notify:
        - reload systemd
  handlers:
    - name: reload systemd
      systemd:
        daemon_reload: true
  tags: cvmfs

- name: Tasks for CVMFS hosts
  hosts: cvmfsstratum0servers:cvmfsstratum1servers:cvmfslocalproxies:cvmfsclients
  remote_user: root
  roles:
    # need epel for the jq package
    - role: geerlingguy.repo-epel
      when: ansible_os_family == "RedHat"
    - role: galaxyproject.cvmfs
    - role: docker
      when: "'cvmfsstratum0servers' in group_names"
  post_tasks:
    - name: Allow other access to FUSE mounts
      lineinfile:
        path: /etc/fuse.conf
        regexp: '^#?user_allow_other$'
        line: user_allow_other
      when: "'jenkinsagents' in group_names"
  tags: cvmfs

- name: Tasks for Docker Swarm managers
  hosts: dockerswarmmanagers
  remote_user: root
  roles:
    - role: docker_swarm
    - role: cron
      tags: cron
  tags: docker

# This is for ns-training, the regular nameservers are set up through the core playbook
- name: Tasks for training DNS servers
  hosts: ns-training.galaxyproject.org
  remote_user: root
  roles:
    - role: dns
      tags: dns
