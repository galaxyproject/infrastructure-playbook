---

slurm_scale_user: slurm
slurm_ssh_key: "{{ openstack_privatekeys.slurm }}"

#os_image: Featured-RockyLinux9
os_image: usegalaxy-controller-rocky9-ephemeral-to-vbi
os_flavor: m3.quad
os_boot_from_volume: true
os_volume_size: 60

os_security_groups:
  - default
  - usegalaxy-control

os_floating_ips:
  - "{{ lookup('dig', inventory_hostname) }}"

cvmfs_quota_limit: 1024

controllers_group_authorized_key_users:
  #- name: centos
  #  authorized: "{{ galaxy_admin_users }} + ['marius_van_den_beek']"
  - name: g2test
    authorized: "{{ galaxy_team_users }}"
  - name: g2main
    authorized: "{{ galaxy_team_users }}"

controllers_group_packages:
  - vim
  - git
  - tmpwatch
  - pdsh
  # Pulsar deps
  #- python39
  #- python39-devel
  - '@development tools'
  #- python-virtualenv
  - libffi-devel
  - libcurl-devel
  - nss-devel
  - openssl-devel
  #- slurm-drmaa
  # this probably won't work until after Slurm is installed
  - https://github.com/natefoo/slurm-drmaa/releases/download/1.1.4/slurm-drmaa-1.1.4-22.05.el9.x86_64.rpm


controllers_group_files:
  - src: files/admin/pdsh-up
    dest: /usr/local/bin/pdsh-up
    mode: "0755"
    owner: root
    group: root
  - src: files/admin/pulsar-clean-jobs
    dest: /usr/local/bin/pulsar-clean-jobs
    mode: "0755"
    owner: root
    group: root
  - src: files/admin/pulsar-staging-fds
    dest: /usr/local/bin/pulsar-staging-fds
    mode: "0755"
    owner: root
    group: root
  - src: files/slurm/prolog.bash
    dest: /etc/slurm/prolog.bash
    mode: "0755"
    owner: root
    group: root

controllers_group_templates:
  - src: templates/telegraf/slurm_slurp.sh.j2
    dest: /usr/local/bin/slurm_slurp.sh
    owner: root
    group: root
    mode: '0755'
  - src: templates/slurm/prolog.sh.j2
    dest: /etc/slurm/prolog.sh
    mode: "0755"
    owner: root
    group: root

controllers_group_directories:
  #- path: /var/lib/slurm
  #  mode: "0755"
  - path: /srv/pulsar/test
    owner: g2test
    group: G-803372
  - path: /srv/pulsar/test/log
    owner: g2test
    group: G-803372
  - path: /srv/pulsar/main
    owner: g2main
    group: G-803372
  - path: /srv/pulsar/main/log
    owner: g2main
    group: G-803372
  - path: /jetstream2/scratch/slurm
    owner: root
    group: root
    mode: "0755"
  # see comment in links
  #- path: /galaxy-repl
  #- path: /galaxy-repl/main

controllers_group_crontabs:
  - id: pulsar_clean_jobs
    name: Clean Test Pulsar Jobs
    user: g2test
    minute: 30
    job: /usr/local/bin/pulsar-clean-jobs /jetstream2/scratch/test/jobs >> /srv/pulsar/test/log/cleanup-jobs.log
  - id: pulsar_clean_jobs
    name: Clean Main Pulsar Jobs
    user: g2main
    minute: 00
    job: /usr/local/bin/pulsar-clean-jobs /jetstream2/scratch/main/jobs >> /srv/pulsar/main/log/cleanup-jobs.log
  - id: clean_amqp_consume
    name: Clean Test AMQP consume dir
    user: g2test
    minute: "0"
    hour: "2"
    job: "/usr/bin/tmpwatch 7d /srv/pulsar/test/var/persisted_data/amqp_ack-jetstream2/consume"
  - id: clean_amqp_consume
    name: Clean Main AMQP consume dir
    user: g2main
    minute: "30"
    hour: "2"
    job: "/usr/bin/tmpwatch 7d /srv/pulsar/main/var/persisted_data/amqp_ack-jetstream2/consume"
  - id: pulsar_staging_fds
    name: Collecting Pulsar staging file descriptor counts
    user: rocky
    job: "/usr/local/bin/pulsar-staging-fds 2>&1 >> /tmp/pulsar-collect-fds.log"

telegraf_agent_hostname: "{{ inventory_hostname }}"
# not sure why but it's establishing connections very slowly
telegraf_influxdb_output_timeout: "15s"
telegraf_plugins_extra:
  slurm_slurp:
    plugin: "exec"
    config:
      - commands = ["/usr/local/bin/slurm_slurp.sh"]
      - timeout = "120s"
      - data_format = "influx"
      - interval = "1m"
  http_response:
    config:
      - urls = ["http://cvmfs1-iu0.js2local/cvmfs/info/v1/meta.json"]
      - http_proxy = "http://localhost:3128"
      - response_status_code = 200
      - interface = "lo"
  pulsar_staging_fds:
    plugin: "file"
    config:
      # via the manual rocky@jetstream2 crontab:
      # * * * * * umask 022; sudo lsof -p $(pgrep -u g2main pulsar-main) | grep /jetstream2/scratch | awk '{print $4}' | tr -d '0-9' | sort | uniq -c | awk '{print $2"="$1}' | xargs echo pulsar_staging_fds > /tmp/pulsar-staging-fds-g2main.txt
      - files = ["/tmp/pulsar-staging-fds-g2main.txt"]
      - data_format = "influx"
      - interval = "1m"
      - collection_offset = "10s"

slurm_slurp_cluster_name: "{{ slurm_cluster_name }}"
slurm_slurp_partitions:
  - gpu-small
  - gxit
  - tpv
  - vgp
  - priority
