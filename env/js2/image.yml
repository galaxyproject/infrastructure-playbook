---

- name: Spawn instances
  hosts: imagehosts
  gather_facts: no
  environment:
    OS_CLOUD: "{{ os_cloud_id }}"
    OS_IDENTITY_API_VERSION: '3'
  roles:
    - openstack

- name: Configure instance(s)
  hosts: imagehosts
  environment:
    HISTFILE: null
  tasks:

    - block:

        - name: Create Galaxy group
          group:
            name: G-803372
            gid: 803372

        - name: Create Galaxy users
          user:
            name: "{{ item.name }}"
            uid: "{{ item.uid }}"
            home: "/home/{{ item.name }}"
            shell: /bin/bash
            group: G-803372
            create_home: true
          loop:
            - name: g2main
              uid: 819800
            - name: g2test
              uid: 819456

        - name: Install Packages
          yum:
            name:
              #- autofs
              - lzo
              - git
              - libcgroup-tools
              - singularity-runtime
          # sometimes mirrors are broken
          register: packages_installed
          retries: 10
          delay: 5
          until: packages_installed is success

        - name: Get /var/lib size
          command: df -kl --output=size /var/lib
          register: df_out

        - name: Set CVMFS cache size
          set_fact:
            cvmfs_quota_limit: "{{ (((df_out.stdout_lines[-1] | trim | int) * 0.7) / 1024) | int }}"

        - name: Log CVMFS cache size
          debug:
            var: cvmfs_quota_limit

        #- name: Create auto.jetstream
        #  template:
        #    src: auto.jetstream.j2
        #    dest: /etc/auto.jetstream

        #- name: Add Jetstream mounts to auto.master
        #  copy:
        #    dest: /etc/auto.master.d/auto.ansible_jetstream.autofs
        #    content: "/jetstream /etc/auto.jetstream --ghost\n"

        #- name: Create directories
        #  file:
        #    path: "{{ item.path }}"
        #    mode: "{{ item.mode | default(omit) }}"
        #    state: directory
        #  loop: "{{ directories }}"

        #- name: Create links
        #  file:
        #    src: "{{ item.src }}"
        #    dest: "{{ item.dest }}"
        #    state: link
        #    force: yes
        #  loop: "{{ links }}"

        - name: Ensure firewalld is not installed
          yum:
            name: firewalld
            state: absent

        - name: Configure ELRepo
          import_role:
            name: elrepo

        - name: Configure Ceph
          import_role:
            name: ceph_mount

        - name: Import CVMFS role
          import_role:
            name: galaxyproject.cvmfs

        - name: Import Slurm role
          import_role:
            name: galaxyproject.slurm

        # on restarts we want to wait until the playbook copies slurm.conf and starts slurmd itself
        - name: Disable slurmd autostart
          service:
            name: slurmd
            enabled: false

        - name: Stop services for cleaning
          service:
            name: "{{ item }}"
            state: stopped
          loop:
            - tuned
            - rsyslog
            #- auditd

        - name: Stop auditd
          command: service auditd stop

        - name: Clean yum
          command: yum clean all

        - name: Remove logs
          file:
            path: "/var/log/{{ item }}"
            state: absent
          loop:
            - audit/audit.log
            - tuned/tuned.log
            - dmesg
            - boot.log
            - maillog
            - btmp
            - cloud-init-output.log
            - cloud-init.log
            - wtmp
            - lastlog
            - secure
            - cron
            - messages
            - yum.log

        - name: Remove home directory files
          file:
            path: "~{{ ansible_user }}/{{ item }}"
            state: absent
          loop:
            - .ssh
            - .bash_history

        - name: Remove other files
          file:
            path: "{{ item }}"
            state: absent
          with_items:
            - /root/.bash_history
            - /etc/hostname

        - name: Touch /.autorelabel
          file:
            path: /.autorelabel
            state: touch

      #rescue:
      #  - include: _inc_clean.yml

# always cleans secrets
#- name: Include delete play
#  include: _inc_delete.yml
