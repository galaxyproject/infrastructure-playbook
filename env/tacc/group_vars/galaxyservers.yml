---

galaxyservers_group_groups:
  - name: gxsrc
    gid: 493

galaxyservers_group_users:
  - name: gxsrc
    group: gxsrc
    groups: G-803372
    uid: 493
    home: /home/gxsrc
    shell: /bin/bash

galaxyservers_group_directories:
  - path: /srv/nginx/{{ galaxy_instance_hostname }}/root
    owner: gxsrc
    group: gxsrc
  - path: /srv/galaxy/{{ galaxy_instance_codename }}
    owner: gxsrc
    group: gxsrc
  - path: /srv/galaxy/{{ galaxy_instance_codename }}/bin
    owner: gxsrc
    group: gxsrc
  - path: /srv/galaxy/{{ galaxy_instance_codename }}/config
    owner: gxsrc
    group: gxsrc
  - path: /srv/galaxy/{{ galaxy_instance_codename }}/nagios
    owner: gxsrc
    group: gxsrc
  - path: /srv/galaxy/{{ galaxy_instance_codename }}/interactive_environments
    owner: gxsrc
    group: gxsrc
  - path: /srv/galaxy/{{ galaxy_instance_codename }}/plugins
    owner: gxsrc
    group: gxsrc
  - path: /srv/galaxy/{{ galaxy_instance_codename }}/proxy
    owner: gxsrc
    group: gxsrc
  - path: /srv/galaxy/{{ galaxy_instance_codename }}/log
    owner: "{{ galaxy_user }}"
    group: G-803372
  - path: /srv/galaxy/{{ galaxy_instance_codename }}/var
    owner: "{{ galaxy_user }}"
    group: G-803372

galaxyservers_group_files:
  - src: files/monitoring/mailoom.py
    dest: /root/mailoom.py
    owner: root
    group: root
    state: absent

galaxyservers_group_crontabs:
  - id: mail_oom_killer
    name: Mail OOM Killer log messages
    user: root
    minute: "0"
    hour: "8,12,16"
    weekday: "1-5"
    job: "/usr/bin/python /root/mailoom.py --oom --mail galaxy-system@lists.galaxyproject.org"
    state: absent

# node, npm for GIE proxy
# scl, rh-python36 for certbot
install_scl: true
galaxyservers_group_packages:
  - nodejs
  - npm
  - '@development tools' # for npm modules
  - collectl
  - slurm-drmaa
  - rh-python36

galaxyservers_group_yum_repositories:
  - name: docker
    state: absent

docker_service_enabled: no

galaxy_cvmfs_repos_enabled: true

# override so that the TACC stratum 1 is always first
cvmfs_server_urls:
  - domain: galaxyproject.org
    use_geoapi: no
    urls:
      - "http://cvmfs1-tacc0.galaxyproject.org/cvmfs/@fqrn@"
      - "http://cvmfs1-iu0.galaxyproject.org/cvmfs/@fqrn@"
      - "http://cvmfs1-psu0.galaxyproject.org/cvmfs/@fqrn@"

cvmfs_http_proxies:
  - "DIRECT"

cvmfs_install_setuid_cvmfs_wipecache: no
cvmfs_install_setuid_cvmfs_remount_sync: yes

# log stats to telegraf locally
#
# separate db filtering for statsd (Galaxy timing) and system stuff using
#   https://github.com/influxdata/telegraf/issues/1778
telegraf_agent_output:
  - type: influxdb
    config:
      - urls = ["https://stats.galaxyproject.org:8086"]
      - username = "client"
      - password = "{{ influxdb_client_pass }}"
      - database = "system"
      - '[outputs.influxdb.tagdrop]'
      - '  influxdb_database = ["*"]'
  - type: influxdb
    config:
      - urls = ["https://stats.galaxyproject.org:8086"]
      - username = "client"
      - password = "{{ influxdb_client_pass }}"
      - database = "telegraf"
      - 'tagexclude = ["influxdb_database"]'
      - '[outputs.influxdb.tagpass]'
      - '  influxdb_database = ["telegraf"]'
  - type: influxdb
    config:
      - urls = ["https://stats.galaxyproject.org:8086"]
      - username = "client"
      - password = "{{ influxdb_client_pass }}"
      - database = "{{ galaxy_instance_codename }}_sql"
      - 'tagexclude = ["influxdb_database"]'
      - '[outputs.influxdb.tagpass]'
      - '  influxdb_database = ["{{ galaxy_instance_codename }}_sql"]'

telegraf_plugins_default:
  - plugin: statsd
    config:
      - service_address = "127.0.0.1:8125"
      - delete_gauges = false
      - delete_counters = false
      - delete_sets = false
      - delete_timings = true
      - percentiles = [90]
      - metric_separator = "_"
      - parse_data_dog_tags = false
      - allowed_pending_messages = 10000
      - percentile_limit = 1000
      - udp_packet_size = 1500
      - '[inputs.statsd.tags]'
      - '  influxdb_database = "telegraf"'
  - plugin: nginx
    config:
      - urls = ["http://localhost/_status"]
  - plugin: cpu
    config:
      - percpu = true
  - plugin: disk
  - plugin: kernel
  - plugin: processes
  - plugin: io
  - plugin: mem
  - plugin: system
  - plugin: swap
  - plugin: net
  - plugin: netstat
  - plugin: x509_cert
    config:
      # could use the cert file directly, but this way we check the actual cert in use, you just have to filter out the
      # CA cert in grafana
      - sources = ["https://{{ inventory_hostname }}:443"]
      # https://github.com/influxdata/telegraf/issues/8809
      - timeout = "5s"
  - plugin: procstat
    config:
      - pattern = "galaxy-main.*handler0"
      - 'user = "{{ galaxy_user }}"'
  - plugin: procstat
    config:
      - pattern = "galaxy-main.*handler1"
      - 'user = "{{ galaxy_user }}"'
  - plugin: procstat
    config:
      - pattern = "galaxy-main.*handler2"
      - 'user = "{{ galaxy_user }}"'
  - plugin: procstat
    config:
      - pattern = "galaxy-main.*handler3"
      - 'user = "{{ galaxy_user }}"'
  - plugin: procstat
    config:
      - pattern = "galaxy-main.*workflow_scheduler0"
      - 'user = "{{ galaxy_user }}"'
