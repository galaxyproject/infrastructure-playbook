---

- name: Create slurm scale directory
  ansible.builtin.file:
    path: "{{ slurm_scale_root }}"
    state: directory
    owner: "{{ slurm_scale_user }}"

- name: Install dependencies
  ansible.builtin.dnf:
    name:
      - openssl-devel

- name: Create slurm scale virtualenv
  ansible.builtin.pip:
    name:
      - pip
      - setuptools
    virtualenv: "{{ slurm_scale_root }}"
    virtualenv_command: "{{ slurm_scale_virtualenv_command }}"
    state: latest
  become: yes
  become_user: "{{ slurm_scale_user }}"

# using `latest` with these can be disastrous e.g. if a new major release of Ansible is uploaded or a C extension
# dependency (e.g. cffi) is updated without wheels.
- name: Install slurm scale dependencies
  ansible.builtin.pip:
    name:
      - ansible>2.7.5
      - shade
      - python-openstackclient
      - openstacksdk
    virtualenv: "{{ slurm_scale_root }}"
  become: yes
  become_user: "{{ slurm_scale_user }}"

- name: Create slurm scale ansible directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ slurm_scale_user }}"
  loop:
    - "{{ slurm_scale_root }}/sbin"
    - "{{ slurm_scale_playbook_path | dirname }}"
    - "/var/log/slurm/elastic"

- name: Clone slurm scale playbook
  ansible.builtin.git:
    repo: "{{ slurm_scale_playbook_repo }}"
    dest: "{{ slurm_scale_playbook_path }}"
    version: "{{ slurm_scale_playbook_commit | default(omit) }}"
    force: "{{ slurms_scale_playbook_force | default(false) }}"
  become: yes
  become_user: "{{ slurm_scale_user }}"
  diff: false
  register: __slurmscale_playbook_repo_result

# Have to do this post-rsync
- name: Create ansible directories for templates and symlinks
  ansible.builtin.file:
    path: "{{ slurm_scale_playbook_path }}/{{ item.path | dirname }}"
    state: directory
    owner: "{{ slurm_scale_user }}"
  loop:
    - path: files/slurm/munge.key

- name: Write secret vars
  ansible.builtin.copy:
    content: |
      {% for name in slurm_scale_vars %}
      {{ {name: hostvars[inventory_hostname][name]} | to_nice_yaml(indent=2) }}
      {% endfor %}
    dest: "{{ slurm_scale_playbook_path }}/group_vars/all/secrets.yaml"
    owner: "{{ slurm_scale_user }}"
  diff: false

- name: Install slurm suspend/resume script
  ansible.builtin.template:
    src: suspend_resume.sh.j2
    dest: "{{ slurm_scale_root }}/sbin/slurm_suspend"
    owner: "{{ slurm_scale_user }}"
    mode: 0755

- name: Link slurm suspend/resume script
  ansible.builtin.file:
    dest: "{{ slurm_scale_root }}/sbin/slurm_resume"
    src: "{{ slurm_scale_root }}/sbin/slurm_suspend"
    state: hard
    force: yes    # supposed to be fixed in 2.4 but it's not?

- name: Install private data
  ansible.builtin.copy:
    content: "{{ item.content }}"
    dest: "{{ slurm_scale_playbook_path }}/{{ item.dest }}"
    owner: "{{ slurm_scale_user }}"
    mode: "0400"
  loop:
    - content: "{{ slurm_ssh_key }}"
      dest: "slurm-kp.pem"
    - content: "{{ clouds_yaml | to_nice_yaml }}"
      dest: "clouds.yaml"
  loop_control:
    label: "{{ item.dest }}"
  diff: false

# this decrypts the key
- name: Install munge key
  ansible.builtin.copy:
    src: "{{ slurm_munge_key }}"
    dest: "{{ slurm_scale_playbook_path }}/files/slurm/munge.key"
    owner: "{{ slurm_scale_user }}"
    mode: "0400"
  diff: false

- name: Install roles
  ansible.builtin.command: "{{ slurm_scale_root }}/bin/ansible-galaxy role install --force -r requirements.yaml"
  args:
    chdir: "{{ slurm_scale_playbook_path }}"
  become: yes
  become_user: slurm
  when: __slurmscale_playbook_repo_result is changed

- name: Install collections
  ansible.builtin.command: "{{ slurm_scale_root }}/bin/ansible-galaxy collection install --force -r requirements.yaml"
  args:
    chdir: "{{ slurm_scale_playbook_path }}"
  become: yes
  become_user: slurm
  when: __slurmscale_playbook_repo_result is changed

- name: Write image generation script
  ansible.builtin.template:
    src: slurmscale-build-images.bash.j2
    dest: "{{ slurm_scale_root }}/sbin/slurmscale-build-images"
    owner: slurm
    group: slurm
    mode: 0755

- name: Write image cleanup script
  ansible.builtin.template:
    src: slurmscale-clean-images.bash.j2
    dest: "{{ slurm_scale_root }}/sbin/slurmscale-clean-images"
    owner: slurm
    group: slurm
    mode: 0755

- name: Create image generation cron job
  cron:
    cron_file: ansible_slurmscale
    user: "{{ slurm_scale_user }}"
    name: "slurmscale images"
    hour: 0
    minute: 0
    weekday: 0
    job: "{{ slurm_scale_root | quote }}/sbin/slurmscale-build-images"

- name: Create image cleanup cron job
  cron:
    cron_file: ansible_slurmscale
    user: "{{ slurm_scale_user }}"
    name: slurmscale image cleanup
    hour: 23
    minute: 0
    job: "{{ slurm_scale_root | quote }}/sbin/slurmscale-clean-images"
