---

- name: Create /srv filesystem
  filesystem:
    dev: "{{ cvmfs_srv_device }}"
    force: no
    fstype: ext4
  when: cvmfs_srv_device

- name: Mount /srv
  mount:
    name: /srv
    src: "{{ cvmfs_srv_device }}"
    fstype: ext4
    state: mounted
  when: cvmfs_srv_device

- name: Install CernVM-FS server and dependencies (yum)
  yum:
    name: "{{ item }}"
    state: "{{ 'latest' if cvmfs_upgrade_server else 'present' }}"
  with_items:
    - httpd
    - mod_wsgi
    - squid
    - cvmfs-server
    - cvmfs-config-default
  when: ansible_os_family == "RedHat"

- name: Install CernVM-FS server and dependencies (apt)
  apt:
    name: "{{ item }}"
    state: "{{ 'latest' if cvmfs_upgrade_server else 'present' }}"
  with_items:
    - apache2
    - cvmfs-server
    - cvmfs-config-default
  when: ansible_os_family == "Debian"

- name: Install CernVM-FS keys
  copy:
    content: "{{ item.key }}"
    dest: "{{ item.path }}"
    owner: "{{ item.owner | default('root') }}"
    group: "root"
    mode: "0444"
  with_items: "{{ cvmfs_keys }}"

- name: Change Apache listen port
  lineinfile:
    # FIXME: RHEL-specific
    dest: /etc/httpd/conf/httpd.conf
    line: "Listen {{ cvmfs_stratum1_apache_port }}"
    regexp: "^Listen\\s+"
    backup: yes
  notify:
    - reload apache

- name: Ensure Apache is enabled and running
  service:
    # FIXME: RHEL-specific
    name: httpd
    state: started
    enabled: yes

- name: Configure squid for stratum 1 proxy
  template:
    src: "{{ cvmfs_stratum1_squid_conf_src | default('stratum1_squid.conf.j2') }}"
    dest: /etc/squid/squid.conf
    backup: yes
  notify:
    - restart squid

- name: Ensure squid is enabled and started
  service:
    name: squid
    state: started
    enabled: yes

- name: Ensure Squid is not firewalled 
  # FIXME: RHEL-specific
  firewalld:
    service: http
    state: enabled
    permanent: yes
    immediate: yes
  ignore_errors: true

- name: Ensure replicas are configured
  command: /usr/bin/cvmfs_server add-replica -o {{ item.owner | default('root') }} http://{{ item.stratum0 }}/cvmfs/{{ item.repository }} /etc/cvmfs/keys/{{ item.repository }}.pub
  args:
    creates: /etc/cvmfs/repositories.d/{{ item.repository }}
  with_items: "{{ cvmfs_repositories }}"
  notify:
    - restart apache

- name: Set repository server options
  lineinfile:
    dest: "/etc/cvmfs/repositories.d/{{ item.0.repository }}/server.conf"
    regexp: "^{{ item.1.split('=')[0] }}=.*"
    line: "{{ item.1 }}"
  with_subelements:
    - "{{ cvmfs_repositories }}"
    - server_options

- name: Create CVMFS stratum1 logrotate configuration
  copy:
    content: |
      /var/log/cvmfs/*.log {
          weekly
          missingok
          notifempty
      }
    dest: /etc/logrotate.d/cvmfs

- name: Remove per-repository snapshot cron jobs
  cron:
    name: cvmfs_snapshot_{{ item.repository }}
    cron_file: ansible_cvmfs_stratum1_snapshot
    state: absent
  with_items: "{{ cvmfs_repositories }}"

- name: Schedule stratum1 snapshots
  cron:
    name: cvmfs_snapshot_all
    cron_file: ansible_cvmfs_stratum1_snapshot
    user: root
    job: output=$(/usr/bin/cvmfs_server snapshot -a -i 2>&1) || echo "$output"
    minute: "*/5"

- name: Schedule stratum1 garbage collection
  cron:
    name: cvmfs_gc_{{ item.1.repository }}
    cron_file: ansible_cvmfs_stratum1_gc
    user: "{{ item.1.owner | default('root') }}"
    job: output=$(/usr/bin/cvmfs_server gc -f -t '1 Jan 1970 00:00:00' {{ item.1.repository }} 2>&1) || echo "$output"
    hour: 3
    minute: "{{ item.0 }}"
    weekday: 3
  with_indexed_items: "{{ cvmfs_repositories }}"

- name: Allow users to manage services
  template:
    src: 01-manage-units.rules.j2
    dest: /etc/polkit-1/rules.d/01-manage-units.rules
  when: cvmfs_manage_units_group is defined
