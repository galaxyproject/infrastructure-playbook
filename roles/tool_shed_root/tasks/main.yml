---

- name: Distribute Tool Shed systemd unit
  ansible.builtin.template:
    src: "templates/tool-shed.service.j2"
    dest: "/etc/systemd/system/tool-shed.service"
    mode: "0644"
  notify:
    - Reload systemd daemon
    - Restart Tool Shed

- name: Distribute hgweb systemd unit
  ansible.builtin.template:
    src: "templates/hgweb.service.j2"
    dest: "/etc/systemd/system/hgweb.service"
    mode: "0644"
  notify:
    - Reload systemd daemon
    - Restart hgweb
  when: tool_shed_hgweb_gunicorn_bind is defined

- name: Flush handlers
  meta: flush_handlers

- name: Ensure Tool Shed is started and enabled
  ansible.builtin.systemd_service:
    name: tool-shed.service
    state: started
    enabled: true

- name: Ensure hgweb is started and enabled
  ansible.builtin.systemd_service:
    name: hgweb
    state: started
    enabled: true
  when: tool_shed_hgweb_gunicorn_bind is defined

- name: Schedule Tool Shed cron jobs
  ansible.builtin.cron:
    name: "{{ item.name }}"
    cron_file: ansible_tool_shed
    user: "{{ item.user }}"
    hour: "{{ item.hour | default(omit) }}"
    minute: "{{ item.minute | default(omit)}}"
    job: "{{ item.job }}"
  loop:
    - name: "Clean Tool Shed $TMPDIR"
      user: root
      hour: 23
      minute: 5
      job: "/usr/sbin/tmpreaper --mtime --mtime-dir 5d {{ tool_shed_tmp_dir | quote }} >>{{ tool_shed_log_dir }}/clean_tmpdir.log 2>&1"
    - name: "Rebuild Tool Shed Whoosh Index"
      user: "{{ tool_shed_user }}"
      minute: 0
      job: "if mkdir $HOME/.build_ts_whoosh_index; then date; {{ tool_shed_venv_dir }}/bin/python {{ tool_shed_server_dir }}/scripts/tool_shed/build_ts_whoosh_index.py -c {{ tool_shed_config_file }} --config-section tool_shed -d; rmdir $HOME/.build_ts_whoosh_index; fi >>{{ tool_shed_log_dir }}/build_ts_whoosh_index.log 2>&1"
