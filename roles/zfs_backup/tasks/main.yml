---

# This only needed for zfs recv
- name: Set sys_fs_import for backup users
  ansible.builtin.lineinfile:
    dest: /etc/user_attr
    backup: "yes"
    line: "{{ item }}::::type=normal;defaultpriv=basic,sys_fs_import"
    regexp: "^{{ item }}:.*"
  loop: "{{ zfs_backup_users | default([]) }}"

- name: Fetch rrsync
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/RsyncProject/rsync/v3.3.0/support/rrsync
    checksum: sha1:a421157138ebc319e4a7e62f61fb209e178372a3
    dest: "{{ rrsync_path }}"
    mode: "0755"

#- name: Deploy zfs-snapshot.py
#  ansible.builtin.copy:
#    src: zfs-snapshot.py
#    dest: "{{ zfs_snapshot_path }}"
#    mode: "0755"

- name: Install sanoid dependencies
  ansible.builtin.package:
    name: "{{ sanoid_dependency_packages }}"
    state: present

- name: Install sanoid
  ansible.builtin.git:
    dest: "{{ sanoid_path }}/src"
    repo: "{{ sanoid_repo }}"
    version: "{{ sanoid_version }}"
  diff: false

- name: Create sanoid bin directory
  ansible.builtin.file:
    path: "{{ sanoid_path }}/bin"
    state: directory

- name: Create sanoid links
  ansible.builtin.file:
    src: "{{ sanoid_path }}/src/{{ item }}"
    dest: "{{ sanoid_path }}/bin/{{ item }}"
    state: link
  loop:
    - findoid
    - sanoid
    - syncoid

- name: Create sanoid config directories
  ansible.builtin.file:
    path: "/etc/sanoid/{{ item }}"
    state: directory
  loop: "{{ sanoid_configs.keys() }}"

- name: Link sanoid config defaults
  ansible.builtin.file:
    src: "{{ sanoid_path }}/src/sanoid.defaults.conf"
    dest: "/etc/sanoid/{{ item }}/sanoid.defaults.conf"
    state: link
  loop: "{{ sanoid_configs.keys() }}"

- name: Deploy sanoid configs
  ansible.builtin.template:
    src: sanoid.conf.j2
    dest: "/etc/sanoid/{{ item }}/sanoid.conf"
  vars:
    sanoid_datasets: "{{ sanoid_configs[item] }}"
  loop: "{{ sanoid_configs.keys() }}"

- name: Deploy sanoid-snapshot.py
  ansible.builtin.copy:
    src: sanoid-snapshot.py
    dest: "{{ sanoid_snapshot_path }}"
    mode: "0755"

- name: Deploy sanoid-prune.py
  ansible.builtin.copy:
    src: sanoid-prune.py
    dest: "{{ sanoid_prune_path }}"
    mode: "0755"

- name: Schedule sanoid pruning
  ansible.builtin.cron:
    name: Prune sanoid snapshots
    minute: 0
    hour: 6
    job: "{{ sanoid_prune_path }}"
